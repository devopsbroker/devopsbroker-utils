#!/bin/bash

#
# createuser - DevOpsBroker administration script for creating new users on remote servers
#
# Copyright (C) 2019 Edward Smith <edwardsmith@devopsbroker.org>
#
# This program is free software: you can redistribute it and/or modify it under
# the terms of the GNU General Public License as published by the Free Software
# Foundation, either version 3 of the License, or (at your option) any later
# version.
#
# This program is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
# FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
# details.
#
# You should have received a copy of the GNU General Public License along with
# this program.  If not, see <http://www.gnu.org/licenses/>.
#
# -----------------------------------------------------------------------------
# Developed on Ubuntu 18.04.2 LTS running kernel.osrelease = 4.18.0-22
#
# -----------------------------------------------------------------------------
#

# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Preprocessing ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

# Load /etc/devops/ansi.conf if ANSI_CONFIG is unset
if [ -z "$ANSI_CONFIG" ] && [ -f /etc/devops/ansi.conf ]; then
	source /etc/devops/ansi.conf
fi

${ANSI_CONFIG?"[1;91mCannot load '/etc/devops/ansi.conf': No such file[0m"}

# Load /etc/devops/exec.conf if EXEC_CONFIG is unset
if [ -z "$EXEC_CONFIG" ] && [ -f /etc/devops/exec.conf ]; then
	source /etc/devops/exec.conf
fi

${EXEC_CONFIG?"[1;91mCannot load '/etc/devops/exec.conf': No such file[0m"}

# Load /etc/devops/functions.conf if FUNC_CONFIG is unset
if [ -z "$FUNC_CONFIG" ] && [ -f /etc/devops/functions.conf ]; then
	source /etc/devops/functions.conf
fi

${FUNC_CONFIG?"[1;91mCannot load '/etc/devops/functions.conf': No such file[0m"}

# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Robustness ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

set -o errexit                 # Exit if any statement returns a non-true value
set -o nounset                 # Exit if use an uninitialised variable
set -o pipefail                # Exit if any statement in a pipeline returns a non-true value
IFS=$'\n\t'                    # Default the Internal Field Separator to newline and tab

scriptName='createuser'

# Display error if not running as root
if [ "$USER" != 'root' ]; then
	printError $scriptName 'Permission denied (you must be root)'
	exit 1
fi

################################## Functions ##################################


################################## Variables ##################################

## Bash exec variables
EXEC_ADDUSER=/usr/sbin/adduser
EXEC_ID=/usr/bin/id

## Options
userName="${1:-}"

## Variables
usageMessage="$scriptName USER"

#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ OPTION Parsing ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

# Display usage if no parameters given
if [ -z "$userName" ]; then
	printUsage "$scriptName USER"
	exit 1
fi

# Display error if user already exists
if [ "$($EXEC_ID $userName 2>/dev/null)" ]; then
	printError $scriptName "Invalid username '$userName': already exists"
	echo
	printUsage $usageMessage

	exit 1
fi

################################### Actions ###################################

# Create user
printBanner "Creating user '$userName'"
$EXEC_ADDUSER $userName
echo

# Add new user to groups
echo "${bold}${yellow}Is the user '${green}$userName${yellow}' an administrator?${white}"
select confirmAdmin in 'Yes' 'No'; do
	if [ "$confirmAdmin" == 'Yes' ]; then
		echo
		printInfo 'Allow user to administer the system with sudo'
		$EXEC_ADDUSER $userName 'sudo'

		printInfo 'Allow user to monitor system logs'
		$EXEC_ADDUSER $userName 'adm'

		printInfo 'Add user to devops group'
		$EXEC_ADDUSER $userName 'devops'
	fi
	break;
done

echo

# Copy local public key from root to new user
if [ -z "${SUDO_USER-}" ] || [ "$SUDO_USER" == 'root' ]; then
	if [ -f $HOME/.ssh/authorized_keys ]; then
		printInfo 'Copying SSH public key from root'
		$EXEC_RSYNC --archive --chown=$userName:$userName ~/.ssh /home/$userName
		echo
	fi
fi

# Configure the user
/usr/local/sbin/configure-user $userName

exit 0
